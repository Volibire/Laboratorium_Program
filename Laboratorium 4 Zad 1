using System;
using System.Collections.Generic;

class Shape
{
    public int X { get; set; }
    public int Y { get; set; }
    public int Height { get; set; }
    public int Width { get; set; }

    public virtual void Draw()
    {
        Console.WriteLine("Drawing a generic shape.");
    }
}

class Rectangle : Shape
{
    public override void Draw()
    {
        Console.WriteLine("Drawing a rectangle.");
    }
}

class Triangle : Shape
{
    public override void Draw()
    {
        Console.WriteLine("Drawing a triangle.");
    }
}

class Circle : Shape
{
    public override void Draw()
    {
        Console.WriteLine("Drawing a circle.");
    }
}

class Program
{
    static void Main()
    {
        List<Shape> shapes = new List<Shape>
        {
            new Rectangle { X = 0, Y = 0, Height = 5, Width = 10 },
            new Triangle { X = 0, Y = 0, Height = 5, Width = 5 },
            new Circle { X = 0, Y = 0, Height = 5, Width = 5 }
        };

        foreach (var shape in shapes)
        {
            shape.Draw();
        }
    }
}
